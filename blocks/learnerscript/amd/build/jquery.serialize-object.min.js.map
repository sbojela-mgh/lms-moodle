{"version":3,"sources":["../src/jquery.serialize-object.js"],"names":["root","factory","define","amd","exports","$","require","jQuery","Zepto","ender","patterns","validate","key","push","fixed","named","FormSerializer","helper","$form","data","pushes","build","base","value","makeObject","keys","match","k","pop","test","idx","incrementPush","replace","encode","pair","name","attr","addPair","obj","extend","serialize","addPairs","pairs","isArray","Error","i","len","length","serializeJSON","JSON","stringify","serializeObject","serializeArray","fn"],"mappings":"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","sourcesContent":["/**\n * jQuery serializeObject\n * @copyright 2014, macek <paulmacek@gmail.com>\n * @link https://github.com/macek/jquery-serialize-object\n * @license BSD\n * @version 2.5.0\n */\n(function(root, factory) {\n\n  // AMD\n  if (typeof define === \"function\" && define.amd) {\n    define([\"exports\", \"jquery\"], function(exports, $) {\n      return factory(exports, $);\n    });\n  }\n\n  // CommonJS\n  else if (typeof exports !== \"undefined\") {\n    var $ = require(\"jquery\");\n    factory(exports, $);\n  }\n\n  // Browser\n  else {\n    factory(root, (root.jQuery || root.Zepto || root.ender || root.$));\n  }\n\n}(this, function(exports, $) {\n\n  var patterns = {\n    validate: /^[a-z_][a-z0-9_]*(?:\\[(?:\\d*|[a-z0-9_]+)\\])*$/i,\n    key:      /[a-z0-9_]+|(?=\\[\\])/gi,\n    push:     /^$/,\n    fixed:    /^\\d+$/,\n    named:    /^[a-z0-9_]+$/i\n  };\n\n  function FormSerializer(helper, $form) {\n\n    // private variables\n    var data     = {},\n        pushes   = {};\n\n    // private API\n    function build(base, key, value) {\n      base[key] = value;\n      return base;\n    }\n\n    function makeObject(root, value) {\n\n      var keys = root.match(patterns.key), k;\n\n      // nest, nest, ..., nest\n      while ((k = keys.pop()) !== undefined) {\n        // foo[]\n        if (patterns.push.test(k)) {\n          var idx = incrementPush(root.replace(/\\[\\]$/, ''));\n          value = build([], idx, value);\n        }\n\n        // foo[n]\n        else if (patterns.fixed.test(k)) {\n          value = build([], k, value);\n        }\n\n        // foo; foo[bar]\n        else if (patterns.named.test(k)) {\n          value = build({}, k, value);\n        }\n      }\n\n      return value;\n    }\n\n    function incrementPush(key) {\n      if (pushes[key] === undefined) {\n        pushes[key] = 0;\n      }\n      return pushes[key]++;\n    }\n\n    function encode(pair) {\n      switch ($('[name=\"' + pair.name + '\"]', $form).attr(\"type\")) {\n        case \"checkbox\":\n          return pair.value === \"on\" ? true : pair.value;\n        default:\n          return pair.value;\n      }\n    }\n\n    function addPair(pair) {\n      if (!patterns.validate.test(pair.name)) return this;\n      var obj = makeObject(pair.name, encode(pair));\n      data = helper.extend(true, data, obj);\n      return this;\n    }\n\n    function addPairs(pairs) {\n      if (!helper.isArray(pairs)) {\n        throw new Error(\"formSerializer.addPairs expects an Array\");\n      }\n      for (var i=0, len=pairs.length; i<len; i++) {\n        this.addPair(pairs[i]);\n      }\n      return this;\n    }\n\n    function serialize() {\n      return data;\n    }\n\n    function serializeJSON() {\n      return JSON.stringify(serialize());\n    }\n\n    // public API\n    this.addPair = addPair;\n    this.addPairs = addPairs;\n    this.serialize = serialize;\n    this.serializeJSON = serializeJSON;\n  }\n\n  FormSerializer.patterns = patterns;\n\n  FormSerializer.serializeObject = function serializeObject() {\n    return new FormSerializer($, this).\n      addPairs(this.serializeArray()).\n      serialize();\n  };\n\n  FormSerializer.serializeJSON = function serializeJSON() {\n    return new FormSerializer($, this).\n      addPairs(this.serializeArray()).\n      serializeJSON();\n  };\n\n  if (typeof $.fn !== \"undefined\") {\n    $.fn.serializeObject = FormSerializer.serializeObject;\n    $.fn.serializeJSON   = FormSerializer.serializeJSON;\n  }\n\n  exports.FormSerializer = FormSerializer;\n\n  return FormSerializer;\n}));\n"],"file":"jquery.serialize-object.min.js"}