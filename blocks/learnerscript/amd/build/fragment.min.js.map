{"version":3,"sources":["../src/fragment.js"],"names":["define","$","ajax","loadFragment","component","callback","args","params","formattedparams","index","push","name","value","deferred","Deferred","promise","call","url","done","data","resolve","fail","ex","reject","contextid","when","then","jsNodes","javascript","allScript","each","scriptNode","tagName","prop","toLowerCase","attr","exists","s","encodeURI","text","html"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A way to call HTML fragments to be inserted as required via JavaScript.\n *\n * @module     core/fragment\n * @class      fragment\n * @package    core\n * @copyright  2016 Adrian Greeve <adrian@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      3.1\n */\ndefine(['jquery', 'block_learnerscript/ajax'], function($, ajax) {\n\n    /**\n     * Loads an HTML fragment through a callback.\n     *\n     * @method loadFragment\n     * @param {string} component Component where callback is located.\n     * @param {string} callback Callback function name.\n     * @param {integer} contextid Context ID of the fragment.\n     * @param {object} params Parameters for the callback.\n     * @return {Promise} JQuery promise object resolved when the fragment has been loaded.\n     */\n    var loadFragment = function(component, callback, args, params) {\n        // Change params into required webservice format.\n        var formattedparams = [];\n        for (var index in params) {\n            formattedparams.push({\n                name: index,\n                value: params[index]\n            });\n        }\n\n        // Ajax stuff.\n        var deferred = $.Deferred();\n\n        var promise = ajax.call({\n            args : args,\n            url: args.url\n            }, false)\n        promise.done(function(data) {\n            deferred.resolve(data);\n        }).fail(function(ex) {\n            deferred.reject(ex);\n        });\n        return deferred.promise();\n    };\n\n    return /** @alias module:core/fragment */{\n        /**\n         * Appends HTML and JavaScript fragments to specified nodes.\n         * Callbacks called by this AMD module are responsible for doing the appropriate security checks\n         * to access the information that is returned. This only does minimal validation on the context.\n         *\n         * @method fragmentAppend\n         * @param {string} component Component where callback is located.\n         * @param {string} callback Callback function name.\n         * @param {integer} contextid Context ID of the fragment.\n         * @param {object} params Parameters for the callback.\n         * @return {Deferred} new promise that is resolved with the html and js.\n         */\n        loadFragment: function(component, callback, contextid, params) {\n            var promise = $.Deferred();\n            $.when(loadFragment(component, callback, contextid, params)).then(function(data) {\n                var jsNodes = $(data.javascript);\n                var allScript = '';\n                jsNodes.each(function(index, scriptNode) {\n                    scriptNode = $(scriptNode);\n                    var tagName = scriptNode.prop('tagName');\n                    if (tagName && (tagName.toLowerCase() == 'script')) {\n                        if (scriptNode.attr('src')) {\n                            // We only reload the script if it was not loaded already.\n                            var exists = false;\n                            $('script').each(function(index, s) {\n                                if ($(s).attr('src') == scriptNode.attr('src')) {\n                                    exists = true;\n                                }\n                                return !exists;\n                            });\n                            if (!exists) {\n                                allScript += ' { ';\n                                allScript += ' node = document.createElement(\"script\"); ';\n                                allScript += ' node.type = \"text/javascript\"; ';\n                                allScript += ' node.src = decodeURI(\"' + encodeURI(scriptNode.attr('src')) + '\"); ';\n                                allScript += ' document.getElementsByTagName(\"head\")[0].appendChild(node); ';\n                                allScript += ' } ';\n                            }\n                        } else {\n                            allScript += ' ' + scriptNode.text();\n                        }\n                    }\n                });\n                promise.resolve(data.html, allScript);\n            }).fail(function(ex) {\n                promise.reject(ex);\n            });\n            return promise.promise();\n        }\n    };\n});\n"],"file":"fragment.min.js"}